/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserPost as PrismaUserPost } from "@prisma/client";

export class UserPostServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.UserPostCountArgs, "select">): Promise<number> {
    return this.prisma.userPost.count(args);
  }

  async userPosts<T extends Prisma.UserPostFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPostFindManyArgs>
  ): Promise<PrismaUserPost[]> {
    return this.prisma.userPost.findMany<Prisma.UserPostFindManyArgs>(args);
  }
  async userPost<T extends Prisma.UserPostFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPostFindUniqueArgs>
  ): Promise<PrismaUserPost | null> {
    return this.prisma.userPost.findUnique(args);
  }
  async createUserPost<T extends Prisma.UserPostCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPostCreateArgs>
  ): Promise<PrismaUserPost> {
    return this.prisma.userPost.create<T>(args);
  }
  async updateUserPost<T extends Prisma.UserPostUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPostUpdateArgs>
  ): Promise<PrismaUserPost> {
    return this.prisma.userPost.update<T>(args);
  }
  async deleteUserPost<T extends Prisma.UserPostDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserPostDeleteArgs>
  ): Promise<PrismaUserPost> {
    return this.prisma.userPost.delete(args);
  }
}
